<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- MENU LIMITATIONS -->
    <!-- The current menu styling does not support the following features:
         - Top Level menu styles
         - And there may be other left out features for the time being.
    -->
    
    <!-- Misc -->
    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
    <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
    <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
    <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
    
    <!-- Brushes -->
    <LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#E9ECEE" Offset="0" />
        <GradientStop Color="#D0D7E2" Offset="1" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="BorderBrush" Color="#9BA7B7" />
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="ForegroundBrush" Color="#000" />
    <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
    <SolidColorBrush x:Key="ImageStripBrush" Color="#E9ECEE" />
    <SolidColorBrush x:Key="SeparatorBrush" Color="#BEC3CB" />

    <!-- Finalized Brushes -->
    <LinearGradientBrush x:Key="Menu_IsHighlightedBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FFFAEC" Offset="0" />
        <GradientStop Color="#FFF5D6" Offset=".5" />
        <GradientStop Color="#FFECB5" Offset=".5" />
        <GradientStop Color="#FFECB5" Offset="1" />
    </LinearGradientBrush>
    
    <SolidColorBrush x:Key="Menu_IsHighlightedBorderBrush" Color="#E5C365" />
    
    <LinearGradientBrush x:Key="Menu_IsPressedBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#F3F4F7" Offset="0" />
        <GradientStop Color="#E7EAF0" Offset=".5" />
        <GradientStop Color="#D1D8E3" Offset=".5" />
        <GradientStop Color="#D1D8E3" Offset="1" />
    </LinearGradientBrush>
    
    <SolidColorBrush x:Key="Menu_IsPressedBorderBrush" Color="#93A3BE"/>
    
    <SolidColorBrush x:Key="Menu_PopupBackgroundBrush" Color="#D1D8E3"/>
    <SolidColorBrush x:Key="Menu_PopupBorderBrush" Color="#93A3BE"/>
    
    <!-- 
        These are MenuItems that live at the top most level of the menu and
        are often considered the "main application menus". This particular
        style however applies to top level menu items that do not have any
        child items, so it acts as a button of sorts.
    
        For this same template, except when it does have child items, see
        TopLevelHeaderTemplateKey.
    -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Name="Border" BorderThickness="1" BorderBrush="Transparent" Padding="6,2">
            <Grid>
                <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#7B7B7B"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource Menu_IsHighlightedBackgroundBrush}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Menu_IsHighlightedBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource Menu_IsPressedBackgroundBrush}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Menu_IsPressedBorderBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- 
        These are MenuItems that live at the top most level of the menu and
        are often considered the "main application menus". This particular
        style however applies to top level menu items that do have child items.
    
        For this same template, except when it does not have child items, see
        TopLevelItemTemplateKey.
    
        This also styles the popup menu, but not the items within it.
    -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Name="Border" BorderThickness="1" BorderBrush="Transparent" Padding="6,2">
            <Grid>
                <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" />
                <Popup Name="Popup" PlacementTarget="{Binding ElementName=Border}" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" MinWidth="225">
                    <Border Name="SubmenuBorder" Padding="0,1" SnapsToDevicePixels="True" Background="{StaticResource Menu_PopupBackgroundBrush}" BorderBrush="{StaticResource Menu_PopupBorderBrush}" BorderThickness="1">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#7B7B7B"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource Menu_IsHighlightedBackgroundBrush}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Menu_IsHighlightedBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource Menu_IsPressedBackgroundBrush}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Menu_IsPressedBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource Menu_IsPressedBackgroundBrush}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Menu_IsPressedBorderBrush}"/>
                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,1"/>
            </Trigger>
            <Trigger Property="IsSuspendingPopupAnimation"  Value="True">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- 
        These are MenuItems that live inside a top most level  menu and
        are often considered the "submenus". This particular style however 
        applies to menu items that do not have child items.
    
        For this same template, except when it does have child items, see
        SubmenuHeaderTemplateKey.
    -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Name="Border" BorderThickness="1" BorderBrush="Transparent">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                <Border Name="Check" Margin="6,0" Padding="2" BorderThickness="1" BorderBrush="Transparent">
                    <ContentPresenter Name="Icon" ContentSource="Icon" MinWidth="16" VerticalAlignment="Center" />
                </Border>
                <ContentPresenter Name="HeaderHost" ContentSource="Header" Grid.Column="1" VerticalAlignment="Center" RecognizesAccessKey="True" />
                <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="5,2,0,2" DockPanel.Dock="Right" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="Check" Property="Background" Value="{StaticResource Menu_IsHighlightedBackgroundBrush}"/>
                <Setter TargetName="Check" Property="BorderBrush" Value="{StaticResource Menu_IsHighlightedBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#7B7B7B"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource Menu_IsHighlightedBackgroundBrush}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Menu_IsHighlightedBorderBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- 
        These are MenuItems that live inside a top most level  menu and
        are often considered the "submenus". This particular style however 
        applies to menu items that do have child items.
    
        For this same template, except when it does not have child items, see
        SubmenuItemTemplateKey.
    
        This also styles the popup menu, but not the items within it.
    -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Name="Border" BorderThickness="1" BorderBrush="Transparent">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                <Border Name="Check" Margin="6,0" Padding="2" BorderThickness="1" BorderBrush="Transparent">
                    <ContentPresenter Name="Icon" ContentSource="Icon" MinWidth="16" VerticalAlignment="Center" />
                </Border>
                <ContentPresenter Name="HeaderHost" ContentSource="Header" Grid.Column="1" VerticalAlignment="Center" RecognizesAccessKey="True" />
                <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="5,2,0,2" DockPanel.Dock="Right" />
                <Path 
                    Grid.Column="3"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M 0 0 L 0 7 L 4 3.5 Z" 
                    Fill="{StaticResource GlyphBrush}" />
                <Popup Name="Popup" PlacementTarget="{Binding ElementName=Border}" Placement="Right" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" MinWidth="225">
                    <Border Name="SubmenuBorder" Padding="0,1" SnapsToDevicePixels="True" Background="{StaticResource Menu_PopupBackgroundBrush}" BorderBrush="{StaticResource Menu_PopupBorderBrush}" BorderThickness="1">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="Check" Property="Background" Value="{StaticResource Menu_IsHighlightedBackgroundBrush}"/>
                <Setter TargetName="Check" Property="BorderBrush" Value="{StaticResource Menu_IsHighlightedBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#7B7B7B"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource Menu_IsHighlightedBackgroundBrush}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Menu_IsHighlightedBorderBrush}" />
            </Trigger>
            <Trigger Property="IsSuspendingPopupAnimation"  Value="True">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- MenuItem -->
    <!-- MUST BE DEFINED AFTER TopLevelHeaderTemplateKey, TopLevelItemTemplateKey, SubmenuHeaderTemplateKey, SubmenuItemTemplateKey -->
    <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
                <Setter Property="Grid.IsSharedSizeScope" Value="True"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Separator -->
    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Height" Value="1"/>
        <Setter Property="Margin" Value="2,1,0,1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Rectangle Fill="{StaticResource SeparatorBrush}" HorizontalAlignment="Stretch" Height="1" Margin="27,0,0,0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type Menu}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                        <GradientStop Offset="0" Color="#CAD3E2"/>
                        <GradientStop Offset="1" Color="#AEB9CD"/>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ContextMenu -->
    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="True" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="MinWidth" Value="225" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border Name="SubmenuBorder" Padding="0,1" SnapsToDevicePixels="True" Background="{StaticResource Menu_PopupBackgroundBrush}" BorderBrush="{StaticResource Menu_PopupBorderBrush}" BorderThickness="1">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>